/*
 * Notebook
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jupyter.catalog.generated.swagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import jupyter.catalog.generated.swagger.model.Provider;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UserDTO
 */


public class UserDTO {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("userName")
  private String userName = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("provider")
  private Provider provider = null;

  @JsonProperty("displayName")
  private String displayName = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("department")
  private String department = null;

  @JsonProperty("imageUrl")
  private String imageUrl = null;

  @JsonProperty("roles")
  private List<String> roles = null;

  @JsonProperty("permissions")
  private List<String> permissions = null;

  @JsonProperty("createdBy")
  private Long createdBy = null;

  @JsonProperty("modifiedBy")
  private Long modifiedBy = null;

  @JsonProperty("createdAt")
  private Long createdAt = null;

  @JsonProperty("modifiedAt")
  private Long modifiedAt = null;

  @JsonProperty("recentlyLoggedIn")
  private Long recentlyLoggedIn = null;

  @JsonProperty("isLocked")
  private String isLocked = null;

  public UserDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Auto-generated ID for User
   * @return id
  **/
  @Schema(description = "Auto-generated ID for User")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public UserDTO userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @Schema(description = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public UserDTO password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(description = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public UserDTO provider(Provider provider) {
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @Valid
  @Schema(description = "")
  public Provider getProvider() {
    return provider;
  }

  public void setProvider(Provider provider) {
    this.provider = provider;
  }

  public UserDTO displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @Schema(description = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public UserDTO email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserDTO department(String department) {
    this.department = department;
    return this;
  }

   /**
   * Get department
   * @return department
  **/
  @Schema(description = "")
  public String getDepartment() {
    return department;
  }

  public void setDepartment(String department) {
    this.department = department;
  }

  public UserDTO imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @Schema(description = "")
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }

  public UserDTO roles(List<String> roles) {
    this.roles = roles;
    return this;
  }

  public UserDTO addRolesItem(String rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @Schema(description = "")
  public List<String> getRoles() {
    return roles;
  }

  public void setRoles(List<String> roles) {
    this.roles = roles;
  }

  public UserDTO permissions(List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public UserDTO addPermissionsItem(String permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @Schema(description = "")
  public List<String> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<String> permissions) {
    this.permissions = permissions;
  }

  public UserDTO createdBy(Long createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Epoch Millis (UTC)
   * @return createdBy
  **/
  @Schema(description = "Epoch Millis (UTC)")
  public Long getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Long createdBy) {
    this.createdBy = createdBy;
  }

  public UserDTO modifiedBy(Long modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Epoch Millis (UTC)
   * @return modifiedBy
  **/
  @Schema(description = "Epoch Millis (UTC)")
  public Long getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(Long modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public UserDTO createdAt(Long createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Epoch Millis (UTC)
   * @return createdAt
  **/
  @Schema(description = "Epoch Millis (UTC)")
  public Long getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Long createdAt) {
    this.createdAt = createdAt;
  }

  public UserDTO modifiedAt(Long modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * Epoch Millis (UTC)
   * @return modifiedAt
  **/
  @Schema(description = "Epoch Millis (UTC)")
  public Long getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(Long modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  public UserDTO recentlyLoggedIn(Long recentlyLoggedIn) {
    this.recentlyLoggedIn = recentlyLoggedIn;
    return this;
  }

   /**
   * Epoch Millis (UTC)
   * @return recentlyLoggedIn
  **/
  @Schema(description = "Epoch Millis (UTC)")
  public Long getRecentlyLoggedIn() {
    return recentlyLoggedIn;
  }

  public void setRecentlyLoggedIn(Long recentlyLoggedIn) {
    this.recentlyLoggedIn = recentlyLoggedIn;
  }

  public UserDTO isLocked(String isLocked) {
    this.isLocked = isLocked;
    return this;
  }

   /**
   * Y / N
   * @return isLocked
  **/
  @Schema(description = "Y / N")
  public String getIsLocked() {
    return isLocked;
  }

  public void setIsLocked(String isLocked) {
    this.isLocked = isLocked;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserDTO userDTO = (UserDTO) o;
    return Objects.equals(this.id, userDTO.id) &&
        Objects.equals(this.userName, userDTO.userName) &&
        Objects.equals(this.password, userDTO.password) &&
        Objects.equals(this.provider, userDTO.provider) &&
        Objects.equals(this.displayName, userDTO.displayName) &&
        Objects.equals(this.email, userDTO.email) &&
        Objects.equals(this.department, userDTO.department) &&
        Objects.equals(this.imageUrl, userDTO.imageUrl) &&
        Objects.equals(this.roles, userDTO.roles) &&
        Objects.equals(this.permissions, userDTO.permissions) &&
        Objects.equals(this.createdBy, userDTO.createdBy) &&
        Objects.equals(this.modifiedBy, userDTO.modifiedBy) &&
        Objects.equals(this.createdAt, userDTO.createdAt) &&
        Objects.equals(this.modifiedAt, userDTO.modifiedAt) &&
        Objects.equals(this.recentlyLoggedIn, userDTO.recentlyLoggedIn) &&
        Objects.equals(this.isLocked, userDTO.isLocked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userName, password, provider, displayName, email, department, imageUrl, roles, permissions, createdBy, modifiedBy, createdAt, modifiedAt, recentlyLoggedIn, isLocked);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    recentlyLoggedIn: ").append(toIndentedString(recentlyLoggedIn)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
