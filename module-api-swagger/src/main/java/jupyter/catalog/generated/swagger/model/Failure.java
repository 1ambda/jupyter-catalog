/*
 * Notebook
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package jupyter.catalog.generated.swagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Failure
 */


public class Failure {
  @JsonProperty("timestamp")
  private Long timestamp = null;

  @JsonProperty("status")
  private Integer status = null;

  @JsonProperty("code")
  private Integer code = null;

  @JsonProperty("message")
  private String message = null;

  @JsonProperty("messages")
  private List<String> messages = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("path")
  private String path = null;

  @JsonProperty("stacktrace")
  private String stacktrace = null;

  public Failure timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Epoch Millis (UTC)
   * @return timestamp
  **/
  @Schema(description = "Epoch Millis (UTC)")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public Failure status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Http Status Code
   * @return status
  **/
  @Schema(description = "Http Status Code")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public Failure code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * Internal Error Code
   * @return code
  **/
  @Schema(description = "Internal Error Code")
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public Failure message(String message) {
    this.message = message;
    return this;
  }

   /**
   * First Error Message
   * @return message
  **/
  @Schema(description = "First Error Message")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public Failure messages(List<String> messages) {
    this.messages = messages;
    return this;
  }

  public Failure addMessagesItem(String messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * All Error Messages
   * @return messages
  **/
  @Schema(description = "All Error Messages")
  public List<String> getMessages() {
    return messages;
  }

  public void setMessages(List<String> messages) {
    this.messages = messages;
  }

  public Failure type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Error Type (e.g. Exception Class in Java)
   * @return type
  **/
  @Schema(description = "Error Type (e.g. Exception Class in Java)")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Failure path(String path) {
    this.path = path;
    return this;
  }

   /**
   * API Path (URI)
   * @return path
  **/
  @Schema(description = "API Path (URI)")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public Failure stacktrace(String stacktrace) {
    this.stacktrace = stacktrace;
    return this;
  }

   /**
   * Get stacktrace
   * @return stacktrace
  **/
  @Schema(description = "")
  public String getStacktrace() {
    return stacktrace;
  }

  public void setStacktrace(String stacktrace) {
    this.stacktrace = stacktrace;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Failure failure = (Failure) o;
    return Objects.equals(this.timestamp, failure.timestamp) &&
        Objects.equals(this.status, failure.status) &&
        Objects.equals(this.code, failure.code) &&
        Objects.equals(this.message, failure.message) &&
        Objects.equals(this.messages, failure.messages) &&
        Objects.equals(this.type, failure.type) &&
        Objects.equals(this.path, failure.path) &&
        Objects.equals(this.stacktrace, failure.stacktrace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, status, code, message, messages, type, path, stacktrace);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Failure {\n");
    
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    stacktrace: ").append(toIndentedString(stacktrace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
